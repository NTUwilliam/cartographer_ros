
Build the .pbstream: 
roslaunch cartographer_ros offline_backpack_2d.launch bag_filenames:=${HOME}/Downloads/b2-2016-04-05-14-44-52.bag

Pure Localization: 
roslaunch cartographer_ros demo_backpack_2d_localization.launch \
   (load_state_filename:=/xxx.bag.pbstream \)
   bag_filename:=/xxx.bag
                       
                       
Set initial pose:
rosrun cartographer_ros cartographer_start_trajectory ... -configuration_directory '/home/williamwoo/new_ws/install_isolated/share/cartographer_ros/configuration_files' -configuration_basename 'backpack_2d_localization.lua' -initial_pose '{to_trajectory_id = 0, relative_pose = { translation = { -4, 0, 0}, rotation = {0., 0.,0 } } }'


#rosrun cartographer_ros cartographer_start_trajectory ... -configuration_directory '/home/williamwoo/catkin_ws/src/cartographer_ros/cartographer_ros/configuration_files' -configuration_basename 'backpack_2d_localization.lua' -initial_pose '{to_trajectory_id = 0, relative_pose = { translation = { -4, 0, 0}, rotation = {0., 0.,0 } } }'




AMCL:
录包:
1. roslaunch launch_scripts start_robot.launch
2. --> ~/ros_bags/zhenyu/ --> ./record-tf-scan.sh

重定位:
1. roslaunch husky_navigation amcl.launch 
2. rosbag play --clock ~/..../xxx.bag
3. rosparam set /use_sim_time true
4. rviz

Husky实时定位:
1. roslaunch launch_scripts start_robot.launch
2. roslaunch nav2d_setup_launches amcl.launch
3. 自己电脑终端 --> rviz

Gmapping建图:
1. roslaunch nav2d_setup_launches init_2d_slam.launch
2. 保存地图: rosrun map_server map_saver -f xxx(map_name)


tf_echo:
rosrun tf tf_echo /map /odom

LOAM:
1. roslaunch loam_velodyne loam_velodyne.launch
2. rosbag play ~/xxxx.bag

Xsens launch:
roslaunch xsens_mti_driver display.launch

MT Manager(on Ubuntu)


Normal SLAM:
roslaunch cartographer_ros demo_backpack_2d.launch bag_filename:=/xxx.bag


Pixracer(Autopilot):
roslaunch mavros px4.launch


